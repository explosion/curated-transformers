variables:
  HUGGINGFACE_CACHE_DIR: $(Agent.HomeDirectory)/.cache/huggingface

trigger:
  batch: true
  branches:
    include:
    - '*'

jobs:
- job: 'Test'
  strategy:
    matrix:
      Python36Windows:
        imageName: 'windows-2019'
        python.version: '3.6'
      Python37Mac:
        imageName: 'macos-latest'
        python.version: '3.7'
      Python38Linux:
        imageName: 'ubuntu-latest'
        python.version: '3.8'
      Python39Windows:
        imageName: 'windows-latest'
        python.version: '3.9'
      Python310Mac:
        imageName: 'macos-latest'
        python.version: '3.10'
      Python311Linux:
        imageName: 'ubuntu-latest'
        python.version: '3.11'
      Python311Windows:
        imageName: 'windows-latest'
        python.version: '3.11'
      Python311Mac:
        imageName: 'macos-latest'
        python.version: '3.11'
    maxParallel: 4
  pool:
    vmImage: $(imageName)

  steps:
  - checkout: self
    submodules: true

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - task: Cache@2
    displayName: Use cached HuggingFace models
    inputs:
      key: 'huggingface | "$(Agent.OS)" | requirements.txt'
      path: $(HUGGINGFACE_CACHE_DIR)
      cacheHitVar: HUGGINGFACE_CACHE_RESTORED

  - script: |
      python -m pip install --upgrade pip setuptools wheel
      python -m pip install -r requirements.txt
    displayName: 'Install dependencies'

  - script: python -m mypy curated_transformers
    displayName: 'Run mypy'
    condition: ne(variables['python.version'], '3.6')

  - script: |
      python -m pip install --no-build-isolation .
      cp curated_transformers/tests/conftest.py .
      rm -rf curated_transformers
    displayName: 'Install from source'

  - script: |
      python -m pytest --pyargs curated_transformers --slow
    displayName: 'Run tests'
